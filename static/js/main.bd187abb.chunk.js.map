{"version":3,"sources":["components/spotPriceList.js","components/useWindowSize.js","components/spotPriceGraph.js","components/spotPricesContainer.js","components/app.js","index.js"],"names":["SpotPriceList","data","className","TableContainer","component","Paper","Table","sx","minWidth","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","border","timeStampDay","timeStampHour","value","unit","timeStamp","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","SpotPriceGraph","currentHour","React","maxY","setMaxY","currentIndex","setCurrentIndex","CustomizedLineLabel","props","x","y","index","dy","dx","fill","font-weight","fontSize","textAnchor","toFixed","CustomizedXAxisTick","payload","transform","CustomizedYAxisTick","dataMax","Math","max","floor","calculateMaxY","findIndex","timeStampShort","CustomTooltip","active","label","length","style","background","color","padding","borderRadius","fontWeight","opacity","ResponsiveContainer","aspect","maxHeight","LineChart","margin","top","right","left","bottom","Line","type","dataKey","stroke","activeDot","strokeWidth","r","dot","CartesianGrid","horizontal","vertical","XAxis","tick","ticks","filter","array","YAxis","domain","Array","keys","shift","getTicksY","ReferenceLine","Tooltip","cursor","offset","content","SpotPricesContainer","dataPresentation","error","setError","isLoaded","setIsLoaded","spotPricesData","setSpotPricesData","spotPricesGraphData","setSpotPricesGraphData","refreshInterval","setRefreshInterval","setCurrentHour","area","match","params","priceArea","toUpperCase","getCurrentHour","currentDateString","Date","toLocaleString","substring","timeStampFull","replace","day","hour","includes","getDataFromApi","fetch","getApiUrl","then","res","json","result","mappedData","slice","TimeStamp","TimeStampDay","TimeStampHour","Value","Unit","mappedGraphData","round","setData","fromDateString","getTimestampToLoadDataFrom","split","fromDate","setDate","getDate","interval","setInterval","clearInterval","message","path","App","exact","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd187abb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\r\n\r\nexport default function SpotPriceList({ data }) {\r\n  return (\r\n    <div className=\"spotprice-list\">\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 400 }} size=\"small\" aria-label=\"Spotpriser\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Datum</TableCell>\r\n              <TableCell align=\"right\">Klockslag</TableCell>\r\n              <TableCell align=\"right\">Spotpris</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row.timeStamp} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\r\n                <TableCell align=\"right\">{row.timeStampDay}</TableCell>\r\n                <TableCell align=\"right\">{row.timeStampHour}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.value} {row.unit}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React from \"react\";\r\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceLine } from \"recharts\";\r\nimport useWindowSize from \"./useWindowSize\";\r\n\r\nexport default function SpotPriceGraph({ data, currentHour }) {\r\n  const [maxY, setMaxY] = React.useState(0);\r\n  const [currentIndex, setCurrentIndex] = React.useState();\r\n  const unit = \"kr/kWh\";\r\n  const windowSize = useWindowSize();\r\n\r\n  React.useEffect(() => {\r\n    function calculateMaxY() {\r\n      const dataMax = Math.max(...data.map((y) => y.value), 0);\r\n      return Math.floor(dataMax) + 1;\r\n    }\r\n    setMaxY(calculateMaxY());\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentIndex(data.findIndex((x) => x.timeStamp === currentHour.timeStampShort));\r\n  }, [currentHour.timeStampShort, data]);\r\n\r\n  function getTicksX() {\r\n    const ticks = data.map((x) => x.timeStamp).filter((value, index, array) => index % 6 === 0 && index !== 0);\r\n    return ticks;\r\n  }\r\n\r\n  function getTicksY() {\r\n    const ticks = [...Array(maxY + 1).keys()];\r\n    ticks.shift();\r\n    return ticks;\r\n  }\r\n\r\n  function CustomizedLineLabel(props) {\r\n    const { x, y, value, index } = props;\r\n    if (index === currentIndex) {\r\n      return (\r\n        <text x={x} y={y} dy={-30} dx={11} fill=\"#DDD\" font-weight=\"bold\" fontSize={16} textAnchor=\"middle\">\r\n          {value.toFixed(2)} {unit}\r\n        </text>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function CustomizedXAxisTick(props) {\r\n    const { x, y, payload } = props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#DDD\" transform=\"rotate(-35)\">\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  function CustomizedYAxisTick(props) {\r\n    const { x, y, payload } = props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={0} textAnchor=\"end\" fill=\"#DDD\" transform=\"rotate(-35)\">\r\n          {payload.value} {unit}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div\r\n          style={{\r\n            background: \"#8884d8\",\r\n            color: \"#2e4355\",\r\n            padding: \"1px 15px\",\r\n            border: \"solid\",\r\n            borderRadius: \"15px\",\r\n            fontWeight: \"bold\",\r\n            opacity: \"0.8\",\r\n          }}\r\n        >\r\n          <p>{label}</p>\r\n          <p>\r\n            {payload[0].value.toFixed(2)} {unit}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" aspect={1.2} maxHeight={windowSize.height - 100}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 50,\r\n          left: 20,\r\n          bottom: 70,\r\n        }}\r\n      >\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"value\"\r\n          stroke=\"#8884d8\"\r\n          label={<CustomizedLineLabel />}\r\n          activeDot={{ fill: \"#2e4355\", stroke: \"#8884d8\", strokeWidth: 4, r: 9 }}\r\n          dot={{ fill: \"#2e4355\", stroke: \"#8884d8\", strokeWidth: 2, r: 5 }}\r\n          strokeWidth=\"4\"\r\n        />\r\n        <CartesianGrid horizontal=\"true\" vertical=\"\" stroke=\"#243240\" />\r\n        <XAxis dataKey=\"timeStamp\" tick={<CustomizedXAxisTick />} ticks={getTicksX()} />\r\n        <YAxis domain={[0, maxY]} tick={<CustomizedYAxisTick />} ticks={getTicksY()} />\r\n        <ReferenceLine x={currentHour?.timeStampShort} stroke=\"orange\" strokeWidth=\"0.5\" />\r\n        <Tooltip cursor={false} offset={-100} content={<CustomTooltip />} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SpotPriceList from \"./spotPriceList\";\r\nimport SpotPriceGraph from \"./spotPriceGraph\";\r\n\r\nexport default function SpotPricesContainer(props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [spotPricesData, setSpotPricesData] = useState([]);\r\n  const [spotPricesGraphData, setSpotPricesGraphData] = useState([]);\r\n  const [refreshInterval, setRefreshInterval] = useState(15 * 60 * 1000);\r\n  const [currentHour, setCurrentHour] = useState();\r\n  const area = props.match.params.priceArea.toUpperCase();\r\n\r\n  useEffect(() => {\r\n    const validPriceAreas = [\"SN1\", \"SN2\", \"SN3\", \"SN4\"];\r\n\r\n    if (!validPriceAreas.includes(area.toUpperCase())) {\r\n      setIsLoaded(true);\r\n      setError(\"Not supported price area\");\r\n      return;\r\n    }\r\n\r\n    const getDataFromApi = () => {\r\n      fetch(getApiUrl())\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setError(null);\r\n            setData(result);\r\n            setRefreshInterval(15 * 60 * 1000);\r\n          },\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            setRefreshInterval(15 * 1000);\r\n          }\r\n        );\r\n    };\r\n\r\n    const getApiUrl = () => {\r\n      const fromDateString = getTimestampToLoadDataFrom().toLocaleString(\"sv-SE\").split(\" \")[0];\r\n      let url = `/api/price/spot/pricearea/${fromDateString}/2050-01-01/${area}`;\r\n      return url;\r\n    };\r\n\r\n    const getTimestampToLoadDataFrom = () => {\r\n      let fromDate = new Date();\r\n      fromDate.setDate(fromDate.getDate() - 1);\r\n      return fromDate;\r\n    };\r\n\r\n    getDataFromApi();\r\n    const interval = setInterval(() => getDataFromApi(), refreshInterval);\r\n    return () => clearInterval(interval);\r\n  }, [refreshInterval, props, area]);\r\n\r\n  useEffect(() => {\r\n    setCurrentHour(getCurrentHour());\r\n    const interval = setInterval(() => setCurrentHour(getCurrentHour()), 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  function getCurrentHour() {\r\n    const now = new Date();\r\n    const currentDateString = now.toLocaleString(\"sv-SE\").substring(0, 14) + \"00:00\";\r\n    const timeStampFull = currentDateString.replace(\" \", \"T\");\r\n    const timeStampShort = currentDateString.substring(0, 16);\r\n    const day = currentDateString.substring(0, 10);\r\n    const hour = currentDateString.substring(11, 16);\r\n\r\n    return { timeStampFull, timeStampShort, day, hour };\r\n  }\r\n\r\n  function setData(data) {\r\n    const filteredData = data.slice(-48);\r\n\r\n    const mappedData = filteredData.map((data) => ({\r\n      timeStamp: data.TimeStamp,\r\n      timeStampDay: data.TimeStampDay,\r\n      timeStampHour: data.TimeStampHour,\r\n      value: data.Value,\r\n      unit: data.Unit,\r\n    }));\r\n    setSpotPricesData(mappedData);\r\n\r\n    const mappedGraphData = mappedData.map((data) => ({\r\n      timeStamp: data.timeStampDay + \" \" + data.timeStampHour,\r\n      value: Math.round(data.value, 0) / 100,\r\n    }));\r\n    setSpotPricesGraphData(mappedGraphData);\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-div\">Error: {error.message ?? error}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    let dataPresentation;\r\n    if (props.match.path === \"/table/:priceArea\") dataPresentation = <SpotPriceList data={spotPricesData} />;\r\n    else if (props.match.path === \"/graph/:priceArea\") {\r\n      dataPresentation = <SpotPriceGraph data={spotPricesGraphData} currentHour={currentHour} />;\r\n    }\r\n    return (\r\n      <>\r\n        <h2>Aktuella spotpriser {area}</h2>\r\n        {dataPresentation}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"../css/app.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport SpotPricesContainer from \"./spotPricesContainer\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/table/:priceArea\" component={SpotPricesContainer} />\n        <Route path=\"/graph/:priceArea\" component={SpotPricesContainer} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/graph/sn3\" />\n        </Route>\n        <Route path=\"/\">\n          <div className=\"error-div\">Page not found</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}