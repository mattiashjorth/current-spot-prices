{"version":3,"sources":["serviceWorkerRegistration.js","components/spotPriceList.js","components/useWindowSize.js","components/spotPriceGraph.js","components/spotPricesContainer.js","components/app.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SpotPriceList","data","className","TableContainer","component","Paper","Table","sx","minWidth","size","TableHead","TableRow","TableCell","align","TableBody","map","row","border","timeStampDay","timeStampHour","value","unit","timeStamp","useWindowSize","useState","width","height","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","SpotPriceGraph","currentHour","React","maxY","setMaxY","currentIndex","setCurrentIndex","CustomizedLineLabel","props","x","y","index","dy","dx","fill","fontWeight","fontSize","textAnchor","toFixed","CustomizedXAxisTick","payload","transform","CustomizedYAxisTick","dataMax","Math","max","floor","calculateMaxY","findIndex","timeStampShort","CustomTooltip","active","label","length","style","background","color","padding","borderRadius","opacity","ResponsiveContainer","LineChart","margin","top","right","left","bottom","Line","type","dataKey","stroke","activeDot","strokeWidth","r","dot","CartesianGrid","horizontal","vertical","XAxis","tick","ticks","filter","array","YAxis","domain","Array","keys","shift","getTicksY","ReferenceLine","Tooltip","cursor","offset","content","SpotPricesContainer","dataPresentation","setError","isLoaded","setIsLoaded","spotPricesData","setSpotPricesData","spotPricesGraphData","setSpotPricesGraphData","refreshInterval","setRefreshInterval","setCurrentHour","area","params","priceArea","toUpperCase","getCurrentHour","currentDateString","Date","toLocaleString","substring","timeStampFull","replace","day","hour","includes","getDataFromApi","fetch","getApiUrl","res","json","result","mappedData","slice","TimeStamp","TimeStampDay","TimeStampHour","Value","Unit","mappedGraphData","round","setData","fromDateString","getTimestampToLoadDataFrom","split","fromDate","setDate","getDate","interval","setInterval","clearInterval","message","path","App","basename","process","exact","to","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.73b491c9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\r\n\r\nexport default function SpotPriceList({ data }) {\r\n  return (\r\n    <div className=\"spotprice-list\">\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 400 }} size=\"small\" aria-label=\"Spotpriser\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Datum</TableCell>\r\n              <TableCell align=\"right\">Klockslag</TableCell>\r\n              <TableCell align=\"right\">Spotpris</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row.timeStamp} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}>\r\n                <TableCell align=\"right\">{row.timeStampDay}</TableCell>\r\n                <TableCell align=\"right\">{row.timeStampHour}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.value} {row.unit}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    window.addEventListener(\"deviceorientation\", handleResize);\r\n    handleResize();\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      window.removeEventListener(\"deviceorientation\", handleResize);\r\n    };\r\n  }, []);\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React from \"react\";\r\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceLine } from \"recharts\";\r\nimport useWindowSize from \"./useWindowSize\";\r\n\r\nexport default function SpotPriceGraph({ data, currentHour }) {\r\n  const [maxY, setMaxY] = React.useState(0);\r\n  const [currentIndex, setCurrentIndex] = React.useState();\r\n  const unit = \"kr/kWh\";\r\n  const windowSize = useWindowSize();\r\n\r\n  React.useEffect(() => {\r\n    function calculateMaxY() {\r\n      const dataMax = Math.max(...data.map((y) => y.value), 0);\r\n      return Math.floor(dataMax) + 1;\r\n    }\r\n    setMaxY(calculateMaxY());\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentIndex(data.findIndex((x) => x.timeStamp === currentHour.timeStampShort));\r\n  }, [currentHour.timeStampShort, data]);\r\n\r\n  function getTicksX() {\r\n    const ticks = data.map((x) => x.timeStamp).filter((value, index, array) => index % 6 === 0 && index !== 0);\r\n    return ticks;\r\n  }\r\n\r\n  function getTicksY() {\r\n    const ticks = [...Array(maxY + 1).keys()];\r\n    ticks.shift();\r\n    return ticks;\r\n  }\r\n\r\n  function CustomizedLineLabel(props) {\r\n    const { x, y, value, index } = props;\r\n    if (index === currentIndex) {\r\n      return (\r\n        <text x={x} y={y} dy={-30} dx={11} fill=\"#bbb\" fontWeight=\"bold\" fontSize={16} textAnchor=\"middle\">\r\n          {value.toFixed(2)} {unit}\r\n        </text>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function CustomizedXAxisTick(props) {\r\n    const { x, y, payload } = props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#bbb\" transform=\"rotate(-35)\">\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  function CustomizedYAxisTick(props) {\r\n    const { x, y, payload } = props;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={0} textAnchor=\"end\" fill=\"#bbb\" transform=\"rotate(-35)\">\r\n          {payload.value} {unit}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div\r\n          style={{\r\n            background: \"#3887ba\",\r\n            color: \"#2e4355\",\r\n            padding: \"1px 15px\",\r\n            border: \"solid\",\r\n            borderRadius: \"15px\",\r\n            fontWeight: \"bold\",\r\n            opacity: \"0.8\",\r\n          }}\r\n        >\r\n          <p>{label}</p>\r\n          <p>\r\n            {payload[0].value.toFixed(2)} {unit}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={windowSize.height - 100}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 50,\r\n          left: 20,\r\n          bottom: 70,\r\n        }}\r\n      >\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"value\"\r\n          stroke=\"#3887ba\"\r\n          label={<CustomizedLineLabel />}\r\n          activeDot={{ fill: \"#2e4355\", stroke: \"#3887ba\", strokeWidth: 4, r: 9 }}\r\n          dot=\"\"\r\n          strokeWidth=\"4\"\r\n        />\r\n        <CartesianGrid horizontal=\"\" vertical=\"\" stroke=\"#243240\" />\r\n        <XAxis dataKey=\"timeStamp\" tick={<CustomizedXAxisTick />} ticks={getTicksX()} />\r\n        <YAxis domain={[0, maxY]} tick={<CustomizedYAxisTick />} ticks={getTicksY()} />\r\n        <ReferenceLine x={currentHour?.timeStampShort} stroke=\"orange\" strokeWidth=\"1\" />\r\n        <Tooltip cursor={false} offset={-100} content={<CustomTooltip />} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SpotPriceList from \"./spotPriceList\";\r\nimport SpotPriceGraph from \"./spotPriceGraph\";\r\n\r\nexport default function SpotPricesContainer(props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [spotPricesData, setSpotPricesData] = useState([]);\r\n  const [spotPricesGraphData, setSpotPricesGraphData] = useState([]);\r\n  const [refreshInterval, setRefreshInterval] = useState(15 * 60 * 1000);\r\n  const [currentHour, setCurrentHour] = useState();\r\n  const area = props.match.params.priceArea.toUpperCase();\r\n\r\n  useEffect(() => {\r\n    const validPriceAreas = [\"SN1\", \"SN2\", \"SN3\", \"SN4\"];\r\n\r\n    if (!validPriceAreas.includes(area.toUpperCase())) {\r\n      setIsLoaded(true);\r\n      setError(\"Not supported price area\");\r\n      return;\r\n    }\r\n\r\n    const getDataFromApi = () => {\r\n      fetch(getApiUrl())\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setError(null);\r\n            setData(result);\r\n            setRefreshInterval(15 * 60 * 1000);\r\n          },\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            setRefreshInterval(15 * 1000);\r\n          }\r\n        );\r\n    };\r\n\r\n    const getApiUrl = () => {\r\n      const fromDateString = getTimestampToLoadDataFrom().toLocaleString(\"sv-SE\").split(\" \")[0];\r\n      let url = `https://jsonp.afeld.me/?url=https://www.vattenfall.se/api/price/spot/pricearea/${fromDateString}/2050-01-01/${area}`;\r\n      return url;\r\n    };\r\n\r\n    const getTimestampToLoadDataFrom = () => {\r\n      let fromDate = new Date();\r\n      fromDate.setDate(fromDate.getDate() - 1);\r\n      return fromDate;\r\n    };\r\n\r\n    getDataFromApi();\r\n    const interval = setInterval(() => getDataFromApi(), refreshInterval);\r\n    return () => clearInterval(interval);\r\n  }, [refreshInterval, props, area]);\r\n\r\n  useEffect(() => {\r\n    setCurrentHour(getCurrentHour());\r\n    const interval = setInterval(() => setCurrentHour(getCurrentHour()), 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  function getCurrentHour() {\r\n    const now = new Date();\r\n    const currentDateString = now.toLocaleString(\"sv-SE\").substring(0, 14) + \"00:00\";\r\n    const timeStampFull = currentDateString.replace(\" \", \"T\");\r\n    const timeStampShort = currentDateString.substring(0, 16);\r\n    const day = currentDateString.substring(0, 10);\r\n    const hour = currentDateString.substring(11, 16);\r\n\r\n    return { timeStampFull, timeStampShort, day, hour };\r\n  }\r\n\r\n  function setData(data) {\r\n    const filteredData = data.slice(-48);\r\n\r\n    const mappedData = filteredData.map((data) => ({\r\n      timeStamp: data.TimeStamp,\r\n      timeStampDay: data.TimeStampDay,\r\n      timeStampHour: data.TimeStampHour,\r\n      value: data.Value,\r\n      unit: data.Unit,\r\n    }));\r\n    setSpotPricesData(mappedData);\r\n\r\n    const mappedGraphData = mappedData.map((data) => ({\r\n      timeStamp: data.timeStampDay + \" \" + data.timeStampHour,\r\n      value: Math.round(data.value, 0) / 100,\r\n    }));\r\n    setSpotPricesGraphData(mappedGraphData);\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-div\">Error: {error.message ?? error}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    let dataPresentation;\r\n    if (props.match.path === \"/table/:priceArea\") dataPresentation = <SpotPriceList data={spotPricesData} />;\r\n    else if (props.match.path === \"/graph/:priceArea\") {\r\n      dataPresentation = <SpotPriceGraph data={spotPricesGraphData} currentHour={currentHour} />;\r\n    }\r\n    return (\r\n      <>\r\n        <h2>Aktuella spotpriser {area}</h2>\r\n        {dataPresentation}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"../css/app.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport SpotPricesContainer from \"./spotPricesContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/table/:priceArea\" component={SpotPricesContainer} />\r\n        <Route path=\"/graph/:priceArea\" component={SpotPricesContainer} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/graph/sn3\" />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div className=\"error-div\">Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}